/* You can add global styles to this file, and also import other style files */
/*
Contain Auscope specific modification to the original template.

*/

[hidden] { display: none !important;}

.layer-panel{
	left:-100px;
	width:319px;
}

.float-sub-menu .layer-panel{
		left:-53px;
		width:315px;
}

.sub-menu .panel .panel-heading{
	height:43px;
}

.infopanel-legend {
	max-width: 260px;
}

.width-80{
	width: 80%;
}

.sidebar-panel-menu-show{
	list-style-type: none;
	margin: 0;
	padding: 5px 0;
	margin-left: 31px;
	font-size: 12px;
}

.hasEvent {
	pointer-events: auto;
	cursor: pointer;
}

.light-blue{
	color: #7a7ae6;
}

.light-blue{
	color: #fe1022;
}

.content-break-word{
	word-wrap: break-word;       /* Internet Explorer 5.5+ */
	word-break: break-all;
	white-space: normal;
}

.cyan-bg{
	background: #5ac7f9;
}

.cyan-color{
	color: #5ac7f9;
}

.line-height-1-8{
	line-height:1.8
}

fieldset.show-fieldset-borders{
	border: 1px solid #c4c4c4;
    padding: 0 1.4em 1.4em 1.4em;
    margin: 0 0 1.5em 0;
}

fieldset legend{
	border-bottom:	0px;
	color: #fff;
	width: 70%;
	padding-left:10px;
}

.standard-title h4 span {
	border-bottom: 2px solid rgba(255,255,255,0.25);
	padding-bottom: 5px;
}

.has-info .input-group-addon {
	background: #272727;
	border-color: #ffffff;
	color: #ffffff;
}

.has-info .checkbox input:not(:checked) + label:before, 
.has-info .checkbox-inline input:not(:checked) + label:before {
	border-color: #ffffff;
}

.has-info .checkbox, 
.has-info .checkbox-inline, 
.has-info .control-label, 
.has-info .help-block, 
.has-info .radio, 
.has-info .radio-inline, 
.has-info.checkbox label, 
.has-info.checkbox-inline label, 
.has-info.radio label, 
.has-info.radio-inline label {
	color: #272727;
}
.has-info .form-control {
	box-shadow: none;
	border-color: #ffffff;
}
.has-info .form-control:focus {
	border-color: #ffffff;
	box-shadow: 0 0 0px 2px rgba(55, 150, 70, 0.35);
}

.has-info .radio input:not(:checked) + label:before, 
.has-info .radio-inline input:not(:checked) + label:before {
	border-color: #ffffff;
}

.has-info .form-control-feedback {
  color: #272727;
}

/**
 * animation for working in progress
 */
@keyframes blink {
    /**
     * At the start of the animation the dot
     * has an opacity of .2
     */
    0% {
      opacity: .2;
    }
    /**
     * At 20% the dot is fully visible and
     * then fades out slowly
     */
    20% {
      opacity: 1;
    }
    /**
     * Until it reaches an opacity of .2 and
     * the animation can start again
     */
    100% {
      opacity: .2;
    }
}

.wip span {
    /**
     * Use the blink animation, which is defined above
     */
    animation-name: blink;
    /**
     * The animation should take 1.4 seconds
     */
    animation-duration: 1.4s;
    /**
     * It will repeat itself forever
     */
    animation-iteration-count: infinite;
    /**
     * This makes sure that the starting style (opacity: .2)
     * of the animation is applied before the animation starts.
     * Otherwise we would see a short flash or would have
     * to set the default styling of the dots to the same
     * as the animation. Same applies for the ending styles.
     */
    animation-fill-mode: both;
    
    margin-right: 5px;
}
/**
 * End of animation for working in progress
 */

.wip span:nth-child(2) {
    /**
     * Starts the animation of the third dot
     * with a delay of .2s, otherwise all dots
     * would animate at the same time
     */
    animation-delay: .2s;
}

.wip span:nth-child(3) {
    /**
     * Starts the animation of the third dot
     * with a delay of .4s, otherwise all dots
     * would animate at the same time
     */
    animation-delay: .4s;
}

/*
max-width: 768px(small screen)
*/
@media (max-width: 768px) {
	.layer-panel{
		left:-60px;
		width:100%;
	}

	.layer-panel > .panel-heading li > a{
		height:30px;
	}

	.desktop-only{
		display: none!important
	}

	.mobile-only{
		display:block;
	}

}

@media (min-width: 768px) {

	.mobile-only{
		display: none!important
	}

	.desktop-only{
		display:block;
	}

}
