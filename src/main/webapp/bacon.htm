
<!DOCTYPE html>
<!-- Credits for icons from http://www.fatcow.com/free-icons/ under http://creativecommons.org/licenses/by/3.0/us/-->
<html xmlns:v="urn:schemas-microsoft-com:vml">
   <head>
      <title>AuScope Discovery Portal</title>

      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta name="description" content="Access geoscientific information from around Australia, via AuScopes national e-Research infrastructure.">
      <meta name="keywords" content="AuScope, Discovery, Resources, GeoSciML, Mineral Occurrence, Geologic Unit, Australia">
      <meta name="author" content="AuScope">
      <meta charset="UTF-8" />


<link rel="stylesheet" type="text/css" href="portal-core/js/ext-5.1.0/build/packages/ext-theme-gray/build/resources/ext-theme-gray-all.css">
<!-- link rel="stylesheet" type="text/css" href="portal-core/js/ext-5.1.0/build/packages/sencha-charts/build/classic/resources/sencha-charts-all.css"-->


<!-- link extjs 5 -->
<script type="text/javascript" src="portal-core/js/ext-5.1.0/build/ext-all-debug.js"></script>
<script type="text/javascript" src="portal-core/js/ext-5.1.0/build/packages/ext-ux/build/ext-ux-debug.js"></script>
<script type="text/javascript" src="portal-core/js/ext-5.1.0/build/examples/ux/Spotlight.js"></script>
<script type="text/javascript" src="portal-core/js/ext-5.1.0/build/examples/ux/form/SearchField.js"></script>
      

<script src="portal-core/js/portal/util/ObservableMap.js" type="text/javascript"></script>
<script src="portal-core/js/portal/util/UnimplementedFunction.js" type="text/javascript"></script>

<script src="portal-core/js/portal/widgets/grid/column/ClickColumn.js" type="text/javascript"></script>
<script src="portal-core/js/portal/widgets/grid/column/RenderableCheckColumn.js" type="text/javascript"></script>
<script src="portal-core/js/portal/widgets/grid/plugin/CellTips.js" type="text/javascript"></script>
<script src="portal-core/js/portal/widgets/grid/plugin/SelectableGrid.js" type="text/javascript"></script>
<script src="portal-core/js/portal/widgets/grid/plugin/RowContextMenu.js" type="text/javascript"></script>
<script src="portal-core/js/portal/widgets/grid/plugin/RowExpanderContainer.js" type="text/javascript"></script>
<script src="portal-core/js/portal/widgets/grid/plugin/InlineContextMenu.js" type="text/javascript"></script>

      <link rel="stylesheet" href="portal-core/js/OpenLayers-2.12/theme/default/style.css" type="text/css">
      <script src="portal-core/js/OpenLayers-2.12/OpenLayers.js" type="text/javascript"></script>
      <script src="http://maps.google.com/maps/api/js?v=3.8&sensor=false"></script>

      <script type="text/javascript">
      Ext.application({
          name : 'portal',

          //Here we build our GUI from existing components - this function should only be assembling the GUI
          //Any processing logic should be managed in dedicated classes - don't let this become a
          //monolithic 'do everything' function
          launch : function() {                                       
              
              var map = new OpenLayers.Map({
                  div: "map1",
                  projection: 'EPSG:3857',                 
                  layers: [
                           new OpenLayers.Layer.Google(
                                   "Google Hybrid",
                                   {type: google.maps.MapTypeId.HYBRID, numZoomLevels: 20}
                               )                    
                       ] ,
                  center: new OpenLayers.LonLat(133.3, -26)              
                 .transform('EPSG:4326', 'EPSG:3857'),
                 zoom: 4     
              });

              var popupId = Ext.id();
              var divId = Ext.id();
              var location = new OpenLayers.LonLat(133.3, -26).transform('EPSG:4326', 'EPSG:3857');
              var divHtml = Ext.util.Format.format('<html><body><div id="{0}" style="width: {1}px; height: {2}px;"></div></body></html>', divId, 200, 200);
              
              var paddedSize = new OpenLayers.Size(200,200);
              
              
              var popup = new OpenLayers.Popup.FramedCloud(popupId, location, paddedSize, divHtml, null, true, null);
              map.addPopup(popup, true);
              
              var node = Ext.get(divId).dom;
              var handler = function(e) {
                 
                  Ext.event.publisher.Gesture.instance.onDelegatedEvent(e);
                 
                  return false;
              };
              node.addEventListener('mousedown', handler);
              node.addEventListener('mouseup', handler);
              node.addEventListener('mousemove', handler);
              node.addEventListener('click', handler);        
              
           
                 
           
            
                var mytab = Ext.create('Ext.tab.Panel', {
                      items: [
                          {
                              id   : 'my-tab',
                              title: 'Tab 1',
                              html : 'A simple tab'
                          },
                          {
                              title: 'Tab 2',
                              html : 'Another one'
                          },
                          {
                              title: 'Tab 3',
                              html : 'Another one'
                          },
                          {
                              title: 'Tab 4',
                              html : 'Another one'
                          },
                          {
                              title: 'Tab 5',
                              html : 'Another one'
                          },
                          {
                              title: 'Tab 6',
                              html : 'Another one'
                          },
                          {
                              title: 'Tab 7',
                              html : 'Another one'
                          },
                          {
                              title: 'Tab 8',
                              html : 'Another one'
                          }
                      ],
                      renderTo : divId,
                      listeners: {
                          beforetabchange: function(tabs, newTab, oldTab) {
                              console.log('before tab change');
                          },
                          tabchange : function(a,b,c,d){
                              console.log('tabchange');
                          }
                      }
                  });   
                
                
                
                
                
                
               
                
                
                
                  
                  
                 
                 
                 Ext.create('Ext.tab.Panel', {
                     items: [
                         {
                             id   : 'my-tab12',
                             title: 'Tab 1',
                             html : 'A simple tab'
                         },
                         {
                             title: 'Tab 2',
                             html : 'Another one'
                         },
                         {
                             title: 'Tab 3',
                             html : 'Another one'
                         },
                         {
                             title: 'Tab 4',
                             html : 'Another one'
                         },
                         {
                             title: 'Tab 5',
                             html : 'Another one'
                         },
                         {
                             title: 'Tab 6',
                             html : 'Another one'
                         },
                         {
                             title: 'Tab 7',
                             html : 'Another one'
                         },
                         {
                             title: 'Tab 8',
                             html : 'Another one'
                         }
                     ],
                     renderTo : 'foo1',
                     listeners: {
                         beforetabchange: function(tabs, newTab, oldTab) {
                             console.log('before tab change');
                         },
                         tabchange : function(a,b,c,d){
                             console.log('tabchange');
                         }
                     }
                 });    
                 
                 
         
              
          }
      });
      </script>

      <link rel="shortcut icon" href="img/favicon.ico" type="image/x-icon" />
   </head>

    <body>
     
       <div id="foo1" style="width:200px;height:200px;"></div>
      
      
      <div id="map1" style="width:500px;height:500px;"></div>
      
      
   </body>


</html>